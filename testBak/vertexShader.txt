#version 330 core
layout (location = 0) in vec3 aPos;   // position of vertex
layout (location = 1) in vec3 aNormal; // normal vector

out vec3 FragPos;  // to pass position to fragment shader
out vec3 Normal;   // to pass normal to fragment shader

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

void main()
{
    FragPos = vec3(model * vec4(aPos, 1.0)); // world position
    Normal = mat3(transpose(inverse(model))) * aNormal; // transformed normal
    gl_Position = projection * view * vec4(FragPos, 1.0); // final position
}
